---
- name: Installing git
  homebrew:
    name: git
  when: brew_packages.stdout is not search('git 2')

- name: Installing delta
  homebrew:
    name: git-delta
  when: brew_packages.stdout is not search('git-delta')

- name: Installing git recent
  npm:
    name: git-recent
    global: yes
  when: npm_global_packages.stdout is not search('git-recent')

- name: Installing gitmoji cli
  npm:
    name: gitmoji-cli
    global: true
  when: npm_global_packages.stdout is not search('gitmoji-cli')

- name: Copyting Git configuration
  template:
    src: .gitconfig.j2
    dest: "{{ home_directory }}/.gitconfig"

- name: Copying Git global ignore
  template:
    src: .gitglobalignore.j2
    dest: "{{ home_directory }}/.gitglobalignore"

# Authorization : tasks bellow to authenticate to github via ssh
- name: Creating ~/.ssh directory
  file:
    path: "{{ home_directory }}/.ssh"
    state: directory

- name: SSH config
  template:
    src: .ssh_config.j2
    dest: "{{ home_directory }}/.ssh/config"

- name: Generating ssh keys for github
  openssh_keypair:
    path: "{{ home_directory }}/.ssh/ssh_github"

- name: Reading ssh public key to authorize
  shell: cat {{ home_directory }}/.ssh/ssh_github.pub
  register: ssh_pub_key
  changed_when: false

- name: Adding ssh public key to github
  local_action:
    module: github_key
    name: Access key for my machine
    token: "{{ github_access_token }}"
    pubkey: "{{ ssh_pub_key.stdout }}"
  when: github_access_token|default(None)

- name: Checking if this remote is https or ssh
  shell: git remote -v
  register: git_remotes
  changed_when: false

- name: Setting remotes to ssh
  shell: git remote set-url origin git@github.com:web-id-fr/mario.git
  when: git_remotes.stdout is search('https')
